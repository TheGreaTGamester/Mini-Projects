using System;

namespace SoloLearn_Tasks
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Enter your password and I will check if it is weak or strong: ");
            string password = Console.ReadLine();

            bool lengthTest = false;
            bool numberTest = false;
            bool specialCharacterTest = false;

            lengthTest = LengthTestCode(password, lengthTest);
            numberTest = NumberTestCode(password, numberTest);
            specialCharacterTest = SymbolTestCode(password, specialCharacterTest);


            if (lengthTest == true && numberTest == true && specialCharacterTest == true)
            {
                Console.WriteLine("Strong");
            }
            else
            {
                Console.WriteLine("Weak");
                Console.WriteLine("Password must include or be: \n" +
                    "At least 7 characters long \n" +
                    "2 symbols ('!', '@', '#', '$', '%', '&', '*') \n" +
                    "2 Numbers");
            }


        }


        static bool LengthTestCode(string password, bool lengthTest)
        {

            if (password.Length >= 7)
            {
                lengthTest = true;
            }
            else
            {
                lengthTest = false;
            }

            return lengthTest;
        }

        static bool SymbolTestCode(string password, bool specialCharacterTest)
        {
            char[] specialCharacters = new char[] { '!', '@', '#', '$', '%', '&', '*', /*'_', '(', ')', '-', '+', '=', '.', ',', '>', '<', '?'*/};

            int firstSymbol = -1;
            int secondSymbol = -1;

            for (int i = 0; i < specialCharacters.Length; i++)
            {

                firstSymbol = password.IndexOf(specialCharacters[i]);

                if (firstSymbol >= 0)
                {
                    break;
                }
            }

            char[] temp = specialCharacters;

            Array.Reverse(temp);

            for (int i = 0; i < temp.Length; i++)
            {

                secondSymbol = password.LastIndexOf(temp[i]);

                if (secondSymbol >= 0 && secondSymbol != -1)
                {
                    break;
                }
            }

            if (firstSymbol != secondSymbol)
            {
                specialCharacterTest = true;
            }
            else
            {
                specialCharacterTest = false;
            }

            return specialCharacterTest;
        }

        static bool NumberTestCode(string password, bool numberTest)
        {
            char[] numberIndex = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};

            int firstSymbol = -1;
            int secondSymbol = -1;

            for (int i = 0; i < numberIndex.Length; i++)
            {
                firstSymbol = password.IndexOf(numberIndex[i]);

                if (firstSymbol >= 0)
                {
                    break;
                }
            }

            char[] temp = numberIndex;

            Array.Reverse(temp);

            for (int i = 0; i < temp.Length; i++)
            {

                secondSymbol = password.LastIndexOf(temp[i]);

                if (secondSymbol >= 0 && secondSymbol != -1)
                {
                    break;
                }
            }

            if (firstSymbol != secondSymbol)
            {
                numberTest = true;
            }
            else
            {
                numberTest = false;
            }

            return numberTest;
        }

    }
}
